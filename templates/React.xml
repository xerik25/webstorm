<templateSet group="React">
  <template name="rccp" value="import React, { Component, Fragment } from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;class $componentName$ extends Component {&#10;    constructor(props) {&#10;      super(props)&#10;    }&#10;    &#10;    state = {&#10;    }&#10;    &#10;    static propTypes = {&#10;    }&#10;    &#10;    render() {&#10;        return (&#10;            &lt;Fragment&gt;&#10;                $END$&#10;            &lt;/Fragment&gt;&#10;        );&#10;    }&#10;}&#10;&#10;export default $componentName$;&#10;" description="Creates a React component class with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rsc" value="import React from 'react';&#10;&#10;const $componentName$ = () =&gt; {&#10;    return (&#10;        &lt;div&gt;&#10;            $END$&#10;        &lt;/div&gt;&#10;    );&#10;};&#10;&#10;export default $componentName$;&#10;" description="Creates a stateless React component without PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rscp" value="import PropTypes from 'prop-types';&#10;import React, { Fragment } from 'react';&#10;&#10;const propTypes = {&#10;    $END$&#10;};&#10;&#10;const $componentName$ = props =&gt; {&#10;    return (&#10;        &lt;Fragment&gt;&#10;            &#10;        &lt;/Fragment&gt;&#10;    );&#10;};&#10;&#10;&#10;$componentName$.propTypes = propTypes&#10;&#10;export default $componentName$;&#10;" description="Creates a stateless React component with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rscpws" value="import { withStyles } from '@material-ui/core/styles'&#10;import PropTypes from 'prop-types'&#10;import React, { Fragment } from 'react'&#10;&#10;const styles = theme =&gt; ({&#10;})&#10;&#10;const propTypes = {&#10;    children: PropTypes.any&#10;};&#10;&#10;const $componentName$ = props =&gt; {&#10;    return (&#10;        &lt;Fragment&gt;&#10;            $END$&#10;        &lt;/Fragment&gt;&#10;    );&#10;};&#10;&#10;&#10;$componentName$.propTypes = propTypes&#10;&#10;const $componentName$WithStyles = withStyles(styles)($componentName$)&#10;export default $componentName$WithStyles&#10;" description="Creates a stateless React component withStyles" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="DART" value="false" />
      <option name="HAML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JADE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
</templateSet>